import python_weather
from python_weather import Client as WeatherClient

from aiogram.types import Message
from utils.translit_utils import transliterate_city


async def message_handler(message: Message) -> None:
    if not message.text:
        await message.answer("–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.")
        return

    city = message.text.strip()

    try:
        city_transliterated = transliterate_city(city)
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–∏ –≥–æ—Ä–æ–¥–∞: {e}")
        return

    async with WeatherClient(unit=python_weather.METRIC) as client:
        try:
            weather = await client.get(city_transliterated)

            celsius = weather.temperature
            sky_description = weather.description

            resp_msg = (
                f"üåç –ì–æ—Ä–æ–¥: {city_transliterated}\n"
                f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {celsius:.1f}¬∞C\n"
                f"‚òÅÔ∏è –ü–æ–≥–æ–¥–∞: {sky_description}"
            )
            await message.answer(resp_msg)
        except Exception as e:
            await message.answer(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –¥–ª—è '{city}'. –û—à–∏–±–∫–∞: {e}")
